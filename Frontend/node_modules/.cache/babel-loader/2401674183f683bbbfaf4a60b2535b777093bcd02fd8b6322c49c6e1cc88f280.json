{"ast":null,"code":"var _jsxFileName = \"/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/Rules.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n\n// function Rules() {\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\">+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Application Program</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {[...Array(20)].map((_, index) => (\n//             <tr key={index}>\n//               <td>{index + 1}</td>\n//               <td>IAP Disclaimer Check</td>\n//               <td>Docx</td>\n//               <td>Investor awareness programme content document</td>\n//               <td>IAF_Passive</td>\n//               <td>\n//                 <button className=\"rules__edit-button\"><FaEdit /></button>\n//                 <button className=\"rules__delete-button\"><FaTrash /></button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={onAddNew}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Application Program</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => onEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => onEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && <EditRule onClose={() => setShowEditRule(false)} rule={currentRule} />}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules() {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       {console.log(\"DDDD: \",data.data)}\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   {console.log(\"Rules: \",rule)}\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && (\n//         <EditRule\n//           onClose={() => setShowEditRule(false)}\n//           rule={currentRule}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules() {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && (\n//         <EditRule\n//           onClose={() => {\n//             setShowEditRule(false);\n//             fetchRules(); // Refresh the rules after edit\n//           }}\n//           rule={currentRule}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\nimport React, { useState, useEffect } from 'react';\nimport './Rules.css';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport AddNewRule from './AddNewRule';\nimport EditRule from './EditRule';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rules() {\n  _s();\n  const [rules, setRules] = useState([]);\n  const [showAddNewRule, setShowAddNewRule] = useState(false);\n  const [showEditRule, setShowEditRule] = useState(false);\n  const [currentRule, setCurrentRule] = useState(null);\n  useEffect(() => {\n    fetchRules();\n  }, []);\n  const fetchRules = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/list_rules');\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        setRules(data.data);\n      } else {\n        console.error('Failed to fetch rules:', data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n  const handleAddRule = async newRule => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/add_rule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newRule)\n      });\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        alert('Rule added successfully!');\n        fetchRules(); // Refresh rules list\n      } else {\n        alert('Failed to add rule: ' + data.data);\n      }\n    } catch (error) {\n      console.error('Error adding rule:', error);\n    }\n  };\n  const handleEditRule = rule => {\n    setCurrentRule(rule);\n    setShowEditRule(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rules\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rules-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rules__add-new-button\",\n          onClick: () => setShowAddNewRule(true),\n          children: \"+ Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"rules__content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sr. No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Media Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Program Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rules.length > 0 ? rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rule[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rule[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rule[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rule[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"rules__edit-button\",\n              onClick: () => handleEditRule(rule),\n              children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 95\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"rules__delete-button\",\n              children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 60\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No rules found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this), showAddNewRule && /*#__PURE__*/_jsxDEV(AddNewRule, {\n      onClose: () => setShowAddNewRule(false),\n      onAddRule: handleAddRule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }, this), showEditRule && /*#__PURE__*/_jsxDEV(EditRule, {\n      onClose: () => {\n        setShowEditRule(false);\n        fetchRules(); // Refresh the rules after edit\n      },\n      rule: currentRule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, this);\n}\n_s(Rules, \"W9dctd8JDsIX+XiyhbpB2180kM0=\");\n_c = Rules;\nexport default Rules;\nvar _c;\n$RefreshReg$(_c, \"Rules\");","map":{"version":3,"names":["React","useState","useEffect","FaEdit","FaTrash","AddNewRule","EditRule","jsxDEV","_jsxDEV","Rules","_s","rules","setRules","showAddNewRule","setShowAddNewRule","showEditRule","setShowEditRule","currentRule","setCurrentRule","fetchRules","response","fetch","data","json","status","console","error","handleAddRule","newRule","method","headers","body","JSON","stringify","alert","handleEditRule","rule","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","index","colSpan","onClose","onAddRule","_c","$RefreshReg$"],"sources":["/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/Rules.js"],"sourcesContent":["// import React from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n\n// function Rules() {\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\">+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Application Program</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {[...Array(20)].map((_, index) => (\n//             <tr key={index}>\n//               <td>{index + 1}</td>\n//               <td>IAP Disclaimer Check</td>\n//               <td>Docx</td>\n//               <td>Investor awareness programme content document</td>\n//               <td>IAF_Passive</td>\n//               <td>\n//                 <button className=\"rules__edit-button\"><FaEdit /></button>\n//                 <button className=\"rules__delete-button\"><FaTrash /></button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={onAddNew}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Application Program</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => onEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => onEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules({ onAddNew, onEditRule }) {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && <EditRule onClose={() => setShowEditRule(false)} rule={currentRule} />}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules() {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       {console.log(\"DDDD: \",data.data)}\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   {console.log(\"Rules: \",rule)}\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && (\n//         <EditRule\n//           onClose={() => setShowEditRule(false)}\n//           rule={currentRule}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './Rules.css';\n// import { FaEdit, FaTrash } from 'react-icons/fa';\n// import AddNewRule from './AddNewRule';\n// import EditRule from './EditRule';\n\n// function Rules() {\n//   const [rules, setRules] = useState([]);\n//   const [showAddNewRule, setShowAddNewRule] = useState(false);\n//   const [showEditRule, setShowEditRule] = useState(false);\n//   const [currentRule, setCurrentRule] = useState(null);\n\n//   useEffect(() => {\n//     fetchRules();\n//   }, []);\n\n//   const fetchRules = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_rules');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setRules(data.data);\n//       } else {\n//         console.error('Failed to fetch rules:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching rules:', error);\n//     }\n//   };\n\n//   const handleEditRule = (rule) => {\n//     setCurrentRule(rule);\n//     setShowEditRule(true);\n//   };\n\n//   return (\n//     <div className=\"rules\">\n//       <div className=\"rules-heading\">\n//         <div>Rules</div>\n//         <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n//       </div>\n//       <table className=\"rules__content-table\">\n//         <thead>\n//           <tr>\n//             <th>Sr. No.</th>\n//             <th>Title</th>\n//             <th>Media Type</th>\n//             <th>Description</th>\n//             <th>Program Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rules.length > 0 ? (\n//             rules.map((rule, index) => (\n//               <tr key={index}>\n//                 <td>{index + 1}</td>\n//                 <td>{rule[0]}</td>\n//                 <td>{rule[1]}</td>\n//                 <td>{rule[2]}</td>\n//                 <td>{rule[3]}</td>\n//                 <td>\n//                   <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n//                   <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No rules found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {showAddNewRule && <AddNewRule onClose={() => setShowAddNewRule(false)} />}\n//       {showEditRule && (\n//         <EditRule\n//           onClose={() => {\n//             setShowEditRule(false);\n//             fetchRules(); // Refresh the rules after edit\n//           }}\n//           rule={currentRule}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Rules;\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport './Rules.css';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport AddNewRule from './AddNewRule';\nimport EditRule from './EditRule';\n\nfunction Rules() {\n  const [rules, setRules] = useState([]);\n  const [showAddNewRule, setShowAddNewRule] = useState(false);\n  const [showEditRule, setShowEditRule] = useState(false);\n  const [currentRule, setCurrentRule] = useState(null);\n\n  useEffect(() => {\n    fetchRules();\n  }, []);\n\n  const fetchRules = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/list_rules');\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        setRules(data.data);\n      } else {\n        console.error('Failed to fetch rules:', data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n\n  const handleAddRule = async (newRule) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/add_rule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newRule)\n      });\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        alert('Rule added successfully!');\n        fetchRules(); // Refresh rules list\n      } else {\n        alert('Failed to add rule: ' + data.data);\n      }\n    } catch (error) {\n      console.error('Error adding rule:', error);\n    }\n  };\n\n  const handleEditRule = (rule) => {\n    setCurrentRule(rule);\n    setShowEditRule(true);\n  };\n\n  return (\n    <div className=\"rules\">\n      <div className=\"rules-heading\">\n        <div>Rules</div>\n        <div><button className=\"rules__add-new-button\" onClick={() => setShowAddNewRule(true)}>+ Add New</button></div>\n      </div>\n      <table className=\"rules__content-table\">\n        <thead>\n          <tr>\n            <th>Sr. No.</th>\n            <th>Title</th>\n            <th>Media Type</th>\n            <th>Description</th>\n            <th>Program Type</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rules.length > 0 ? (\n            rules.map((rule, index) => (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{rule[0]}</td>\n                <td>{rule[1]}</td>\n                <td>{rule[2]}</td>\n                <td>{rule[3]}</td>\n                <td>\n                  <button className=\"rules__edit-button\" onClick={() => handleEditRule(rule)}><FaEdit /> Edit</button>\n                  <button className=\"rules__delete-button\"><FaTrash /> Delete</button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"6\">No rules found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {showAddNewRule && (\n        <AddNewRule \n          onClose={() => setShowAddNewRule(false)}\n          onAddRule={handleAddRule} \n        />\n      )}\n      {showEditRule && (\n        <EditRule\n          onClose={() => {\n            setShowEditRule(false);\n            fetchRules(); // Refresh the rules after edit\n          }}\n          rule={currentRule}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Rules;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}