{"ast":null,"code":"var _jsxFileName = \"/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/ValidateContent.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './ValidateContent.css';\n\n// function ValidateContent() {\n//   const [programs, setPrograms] = useState([]);\n\n//   useEffect(() => {\n//     fetchPrograms();\n//   }, []);\n\n//   const fetchPrograms = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_programs');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setPrograms(data.data);\n//       } else {\n//         console.error('Failed to fetch programs:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching programs:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"validate-content\">\n//       <h2>Validate Content</h2>\n//       <form className=\"validate-form\">\n//         <div className=\"form-group\">\n//           <label><b>Program Type</b></label>\n//           <select>\n//             <option>Select</option>\n//             {programs.map((program, index) => (\n//               <option key={index} value={program[0]}>{program[0]}</option>\n//             ))}\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label><b>Media Type</b></label>\n//           <select>\n//             <option>Select</option>\n//             <option value=\"PDF/Image\">PDF/Image</option>\n//             <option value=\"Video\">Video</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group media-type-group\">\n//           <label><b>Browse</b></label>\n//           <div className=\"input-group\">\n//             <input type=\"text\" placeholder=\"Select\" />\n//             <button type=\"button\" className=\"browse-button\">Browse</button>\n//           </div>\n//         </div>\n//       </form>\n//       <div className='analyze-button-repositioning'>\n//         <button type=\"submit\" className=\"analyze-button\">Analyze</button>\n//         <div className=\"uploaded-file\">Uploaded: attachment.docx</div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ValidateContent;\n\nimport React, { useState, useEffect } from 'react';\nimport './ValidateContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateContent() {\n  _s();\n  const [programs, setPrograms] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    fetchPrograms();\n  }, []);\n  const fetchPrograms = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/list_programs');\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        setPrograms(data.data);\n      } else {\n        console.error('Failed to fetch programs:', data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching programs:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleAnalyze = event => {\n    event.preventDefault();\n    if (selectedFile) {\n      // Perform further operations with the selected file\n      console.log('Selected file:', selectedFile);\n    } else {\n      alert('Please select a file to analyze.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validate-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Validate Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"validate-form\",\n      onSubmit: handleAnalyze,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Program Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), programs.map((program, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: program[0],\n            children: program[0]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Media Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PDF/Image\",\n            children: \"PDF/Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Video\",\n            children: \"Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group media-type-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Select\",\n            value: selectedFile ? selectedFile.name : '',\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"browse-button\",\n            onClick: () => document.getElementById('fileInput').click(),\n            children: \"Browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyze-button-repositioning\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"analyze-button\",\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-file\",\n          children: [\"Uploaded: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(ValidateContent, \"hTFFMO5lu61f5maNy6sNRV/B1uc=\");\n_c = ValidateContent;\nexport default ValidateContent;\nvar _c;\n$RefreshReg$(_c, \"ValidateContent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ValidateContent","_s","programs","setPrograms","selectedFile","setSelectedFile","fetchPrograms","response","fetch","data","json","status","console","error","handleFileChange","event","target","files","handleAnalyze","preventDefault","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","program","index","value","type","placeholder","name","readOnly","id","style","display","onChange","onClick","document","getElementById","click","_c","$RefreshReg$"],"sources":["/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/ValidateContent.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './ValidateContent.css';\n\n// function ValidateContent() {\n//   const [programs, setPrograms] = useState([]);\n\n//   useEffect(() => {\n//     fetchPrograms();\n//   }, []);\n\n//   const fetchPrograms = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/list_programs');\n//       const data = await response.json();\n//       if (data.status === 'SUCCESS') {\n//         setPrograms(data.data);\n//       } else {\n//         console.error('Failed to fetch programs:', data.data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching programs:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"validate-content\">\n//       <h2>Validate Content</h2>\n//       <form className=\"validate-form\">\n//         <div className=\"form-group\">\n//           <label><b>Program Type</b></label>\n//           <select>\n//             <option>Select</option>\n//             {programs.map((program, index) => (\n//               <option key={index} value={program[0]}>{program[0]}</option>\n//             ))}\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label><b>Media Type</b></label>\n//           <select>\n//             <option>Select</option>\n//             <option value=\"PDF/Image\">PDF/Image</option>\n//             <option value=\"Video\">Video</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group media-type-group\">\n//           <label><b>Browse</b></label>\n//           <div className=\"input-group\">\n//             <input type=\"text\" placeholder=\"Select\" />\n//             <button type=\"button\" className=\"browse-button\">Browse</button>\n//           </div>\n//         </div>\n//       </form>\n//       <div className='analyze-button-repositioning'>\n//         <button type=\"submit\" className=\"analyze-button\">Analyze</button>\n//         <div className=\"uploaded-file\">Uploaded: attachment.docx</div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ValidateContent;\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport './ValidateContent.css';\n\nfunction ValidateContent() {\n  const [programs, setPrograms] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    fetchPrograms();\n  }, []);\n\n  const fetchPrograms = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/list_programs');\n      const data = await response.json();\n      if (data.status === 'SUCCESS') {\n        setPrograms(data.data);\n      } else {\n        console.error('Failed to fetch programs:', data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching programs:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleAnalyze = (event) => {\n    event.preventDefault();\n    if (selectedFile) {\n      // Perform further operations with the selected file\n      console.log('Selected file:', selectedFile);\n    } else {\n      alert('Please select a file to analyze.');\n    }\n  };\n\n  return (\n    <div className=\"validate-content\">\n      <h2>Validate Content</h2>\n      <form className=\"validate-form\" onSubmit={handleAnalyze}>\n        <div className=\"form-group\">\n          <label><b>Program Type</b></label>\n          <select>\n            <option>Select</option>\n            {programs.map((program, index) => (\n              <option key={index} value={program[0]}>{program[0]}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label><b>Media Type</b></label>\n          <select>\n            <option>Select</option>\n            <option value=\"PDF/Image\">PDF/Image</option>\n            <option value=\"Video\">Video</option>\n          </select>\n        </div>\n        <div className=\"form-group media-type-group\">\n          <label><b>Browse</b></label>\n          <div className=\"input-group\">\n            <input type=\"text\" placeholder=\"Select\" value={selectedFile ? selectedFile.name : ''} readOnly />\n            <input\n              type=\"file\"\n              id=\"fileInput\"\n              style={{ display: 'none' }}\n              onChange={handleFileChange}\n            />\n            <button type=\"button\" className=\"browse-button\" onClick={() => document.getElementById('fileInput').click()}>Browse</button>\n          </div>\n        </div>\n        <div className='analyze-button-repositioning'>\n          <button type=\"submit\" className=\"analyze-button\">Analyze</button>\n          {selectedFile && <div className=\"uploaded-file\">Uploaded: {selectedFile.name}</div>}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ValidateContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}