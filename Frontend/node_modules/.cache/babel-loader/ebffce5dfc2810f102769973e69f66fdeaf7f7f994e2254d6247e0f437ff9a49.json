{"ast":null,"code":"var _jsxFileName = \"/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/EditRule.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ title, description, programType, mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule edited successfully!');\n//           setTimeout(() => {\n//             onClose();\n//             window.location.reload();\n//           }, 2000);\n//         } else {\n//           alert('Failed to edit rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error editing rule:', error);\n//         alert('Error editing rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder=\"Enter title\"\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Enter description\"\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select\n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select\n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           setTimeout(() => {\n//             onClose();\n//           }, 2000);\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select \n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select \n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           onClose();\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n\n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select \n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select \n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [disclaimer, setDisclaimer] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setDisclaimer(rule[3]);\n//       setProgramType(rule[4]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && disclaimer && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, disclaimer, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           onClose();\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Disclaimer</label>\n//             <input\n//               type=\"text\"\n//               value={disclaimer}\n//               onChange={(e) => setDisclaimer(e.target.value)}\n//               placeholder='Enter disclaimer'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group-row\">\n//             <div className=\"edit-rule__form-group\">\n//               <label>Program Type</label>\n//               <select \n//                 value={programType}\n//                 onChange={(e) => setProgramType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Program Type</option>\n//                 <option value=\"IAP\">IAP</option>\n//                 <option value=\"Product\">Product</option>\n//                 <option value=\"NFO\">NFO</option>\n//               </select>\n//             </div>\n//             <div className=\"edit-rule__form-group\">\n//               <label>Media Type</label>\n//               <select \n//                 value={mediaType}\n//                 onChange={(e) => setMediaType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Media Type</option>\n//                 <option value=\"PDF/Image\">PDF/Image</option>\n//                 <option value=\"Video\">Video</option>\n//               </select>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule, onUpdateRule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n//   const [disclaimer, setDisclaimer] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]); // Assuming 'rule[0]' is the title\n//       setDescription(rule[2]); // Assuming 'rule[2]' is the description\n//       setDisclaimer(rule[3]); // Assuming 'rule[3]' is the disclaimer\n//       setProgramType(rule[4]); // Assuming 'rule[4]' is the program type, make sure this index is correct\n//       setMediaType(rule[1]); // Assuming 'rule[1]' is the media type\n//     }\n//   }, [rule]);\n\n//   const handleEdit = () => {\n//     if (title && description && programType && mediaType && disclaimer) {\n//       const updatedRule = { rulename: title, media_type: mediaType, description, program_type: programType, disclaimer };\n//       onUpdateRule(updatedRule);\n//       onClose();\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule-field\">\n//             <label>Title</label>\n//             <input \n//               type=\"text\" \n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder=\"Enter title\" \n//             />\n//             {console.log(\"Title value: \",title)}\n//           </div>\n//           <div className=\"edit-rule-field\">\n//             <label>Description</label>\n//             <input \n//               type=\"text\" \n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Enter description\" \n//             />\n//             {console.log(\"Description value: \",description)}\n//           </div>\n//           <div className=\"edit-rule-field\">\n//             <label>Disclaimer</label>\n//             <input \n//               type=\"text\" \n//               value={disclaimer}\n//               onChange={(e) => setDisclaimer(e.target.value)}\n//               placeholder=\"Enter disclaimer\" \n//             />\n//             {console.log(\"Disclaimer value: \",disclaimer)}\n//           </div>\n//           <div className=\"edit-rule-field-row\">\n//             <div className=\"edit-rule-field\">\n//               <label>Program Type</label>\n//               <select \n//                 value={programType}\n//                 onChange={(e) => setProgramType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Program Type</option>\n//                 <option value=\"IAP\">IAP</option>\n//                 <option value=\"Product\">Product</option>\n//                 <option value=\"NFO\">NFO</option>\n//               </select>\n//               {console.log(\"ProgramType value: \",programType)}\n//             </div>\n//             <div className=\"edit-rule-field\">\n//               <label>Media Type</label>\n//               <select \n//                 value={mediaType}\n//                 onChange={(e) => setMediaType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Media Type</option>\n//                 <option value=\"PDF/Image\">PDF/Image</option>\n//                 <option value=\"Video\">Video</option>\n//               </select>\n//               {console.log(\"MediaType value: \",mediaType)}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\nimport React, { useState, useEffect } from 'react';\nimport './EditRule.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditRule({\n  onClose,\n  rule,\n  onUpdateRule\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [programType, setProgramType] = useState('');\n  const [mediaType, setMediaType] = useState('');\n  const [disclaimer, setDisclaimer] = useState('');\n  useEffect(() => {\n    if (rule) {\n      setTitle(rule[0]); // Assuming 'rule[0]' is the title\n      setDescription(rule[2]); // Assuming 'rule[2]' is the description\n      setDisclaimer(rule[3]); // Assuming 'rule[3]' is the disclaimer\n      setProgramType(rule[4]); // Assuming 'rule[4]' is the program type, make sure this index is correct\n      setMediaType(rule[1]); // Assuming 'rule[1]' is the media type\n    }\n  }, [rule]);\n  const handleEdit = () => {\n    if (title && description && programType && mediaType && disclaimer) {\n      const updatedRule = {\n        rulename: title,\n        media_type: mediaType,\n        description,\n        program_type: programType,\n        disclaimer\n      };\n      onUpdateRule(updatedRule);\n      onClose();\n    } else {\n      alert('Please enter all fields');\n    }\n  };\n  {\n    \"Rule is: \";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-rule-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-rule\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-rule-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Edit Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-rule-close\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-rule-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-rule-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Enter title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-rule-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Enter description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-rule-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Disclaimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: disclaimer,\n            onChange: e => setDisclaimer(e.target.value),\n            placeholder: \"Enter disclaimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-rule-field-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-rule-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Program Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: programType,\n              onChange: e => setProgramType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Program Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IAP\",\n                children: \"IAP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NFO\",\n                children: \"NFO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-rule-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Media Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: mediaType,\n              onChange: e => setMediaType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Media Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PDF/Image\",\n                children: \"PDF/Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Video\",\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-rule-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-rule-save\",\n          onClick: handleEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-rule-cancel\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 629,\n    columnNumber: 5\n  }, this);\n}\n_s(EditRule, \"kkj4dbYivc8M6tMHHl8X0o/hms0=\");\n_c = EditRule;\nexport default EditRule;\nvar _c;\n$RefreshReg$(_c, \"EditRule\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditRule","onClose","rule","onUpdateRule","_s","title","setTitle","description","setDescription","programType","setProgramType","mediaType","setMediaType","disclaimer","setDisclaimer","handleEdit","updatedRule","rulename","media_type","program_type","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/user/Market_Content_Validator/market-content-app/Frontend/src/components/EditRule.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ title, description, programType, mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule edited successfully!');\n//           setTimeout(() => {\n//             onClose();\n//             window.location.reload();\n//           }, 2000);\n//         } else {\n//           alert('Failed to edit rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error editing rule:', error);\n//         alert('Error editing rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder=\"Enter title\"\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Enter description\"\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select\n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select\n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           setTimeout(() => {\n//             onClose();\n//           }, 2000);\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select \n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select \n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setProgramType(rule[3]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           onClose();\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n          \n//           <div className=\"edit-rule__form-group\">\n//             <label>Program Type</label>\n//             <select \n//               value={programType}\n//               onChange={(e) => setProgramType(e.target.value)}\n//             >\n//               <option value=\"\">Select Program Type</option>\n//               <option value=\"IAP\">IAP</option>\n//               <option value=\"Product\">Product</option>\n//               <option value=\"NFO\">NFO</option>\n//             </select>\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Media Type</label>\n//             <select \n//               value={mediaType}\n//               onChange={(e) => setMediaType(e.target.value)}\n//             >\n//               <option value=\"\">Select Media Type</option>\n//               <option value=\"PDF/Image\">PDF/Image</option>\n//               <option value=\"Video\">Video</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [disclaimer, setDisclaimer] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]);\n//       setDescription(rule[2]);\n//       setDisclaimer(rule[3]);\n//       setProgramType(rule[4]);\n//       setMediaType(rule[1]);\n//     }\n//   }, [rule]);\n\n//   const handleEdit = async () => {\n//     if (title && description && disclaimer && programType && mediaType) {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:8000/edit_rule/${rule[4]}`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ rulename: title, description, disclaimer, program_type: programType, media_type: mediaType })\n//         });\n//         const data = await response.json();\n//         if (data.status === 'SUCCESS') {\n//           alert('Rule updated successfully!');\n//           onClose();\n//         } else {\n//           alert('Failed to update rule: ' + data.data);\n//         }\n//       } catch (error) {\n//         console.error('Error updating rule:', error);\n//         alert('Error updating rule');\n//       }\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule__form-group\">\n//             <label>Title</label>\n//             <input\n//               type=\"text\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder='Enter title'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Description</label>\n//             <input\n//               type=\"text\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder='Enter description'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group\">\n//             <label>Disclaimer</label>\n//             <input\n//               type=\"text\"\n//               value={disclaimer}\n//               onChange={(e) => setDisclaimer(e.target.value)}\n//               placeholder='Enter disclaimer'\n//             />\n//           </div>\n//           <div className=\"edit-rule__form-group-row\">\n//             <div className=\"edit-rule__form-group\">\n//               <label>Program Type</label>\n//               <select \n//                 value={programType}\n//                 onChange={(e) => setProgramType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Program Type</option>\n//                 <option value=\"IAP\">IAP</option>\n//                 <option value=\"Product\">Product</option>\n//                 <option value=\"NFO\">NFO</option>\n//               </select>\n//             </div>\n//             <div className=\"edit-rule__form-group\">\n//               <label>Media Type</label>\n//               <select \n//                 value={mediaType}\n//                 onChange={(e) => setMediaType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Media Type</option>\n//                 <option value=\"PDF/Image\">PDF/Image</option>\n//                 <option value=\"Video\">Video</option>\n//               </select>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './EditRule.css';\n\n// function EditRule({ onClose, rule, onUpdateRule }) {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [programType, setProgramType] = useState('');\n//   const [mediaType, setMediaType] = useState('');\n//   const [disclaimer, setDisclaimer] = useState('');\n\n//   useEffect(() => {\n//     if (rule) {\n//       setTitle(rule[0]); // Assuming 'rule[0]' is the title\n//       setDescription(rule[2]); // Assuming 'rule[2]' is the description\n//       setDisclaimer(rule[3]); // Assuming 'rule[3]' is the disclaimer\n//       setProgramType(rule[4]); // Assuming 'rule[4]' is the program type, make sure this index is correct\n//       setMediaType(rule[1]); // Assuming 'rule[1]' is the media type\n//     }\n//   }, [rule]);\n\n//   const handleEdit = () => {\n//     if (title && description && programType && mediaType && disclaimer) {\n//       const updatedRule = { rulename: title, media_type: mediaType, description, program_type: programType, disclaimer };\n//       onUpdateRule(updatedRule);\n//       onClose();\n//     } else {\n//       alert('Please enter all fields');\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-rule-overlay\">\n//       <div className=\"edit-rule\">\n//         <div className=\"edit-rule-header\">\n//           <div>Edit Rule</div>\n//           <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n//         </div>\n//         <div className=\"edit-rule-body\">\n//           <div className=\"edit-rule-field\">\n//             <label>Title</label>\n//             <input \n//               type=\"text\" \n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               placeholder=\"Enter title\" \n//             />\n//             {console.log(\"Title value: \",title)}\n//           </div>\n//           <div className=\"edit-rule-field\">\n//             <label>Description</label>\n//             <input \n//               type=\"text\" \n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Enter description\" \n//             />\n//             {console.log(\"Description value: \",description)}\n//           </div>\n//           <div className=\"edit-rule-field\">\n//             <label>Disclaimer</label>\n//             <input \n//               type=\"text\" \n//               value={disclaimer}\n//               onChange={(e) => setDisclaimer(e.target.value)}\n//               placeholder=\"Enter disclaimer\" \n//             />\n//             {console.log(\"Disclaimer value: \",disclaimer)}\n//           </div>\n//           <div className=\"edit-rule-field-row\">\n//             <div className=\"edit-rule-field\">\n//               <label>Program Type</label>\n//               <select \n//                 value={programType}\n//                 onChange={(e) => setProgramType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Program Type</option>\n//                 <option value=\"IAP\">IAP</option>\n//                 <option value=\"Product\">Product</option>\n//                 <option value=\"NFO\">NFO</option>\n//               </select>\n//               {console.log(\"ProgramType value: \",programType)}\n//             </div>\n//             <div className=\"edit-rule-field\">\n//               <label>Media Type</label>\n//               <select \n//                 value={mediaType}\n//                 onChange={(e) => setMediaType(e.target.value)}\n//               >\n//                 <option value=\"\">Select Media Type</option>\n//                 <option value=\"PDF/Image\">PDF/Image</option>\n//                 <option value=\"Video\">Video</option>\n//               </select>\n//               {console.log(\"MediaType value: \",mediaType)}\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"edit-rule-footer\">\n//           <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n//           <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EditRule;\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport './EditRule.css';\n\nfunction EditRule({ onClose, rule, onUpdateRule }) {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [programType, setProgramType] = useState('');\n  const [mediaType, setMediaType] = useState('');\n  const [disclaimer, setDisclaimer] = useState('');\n\n  useEffect(() => {\n    if (rule) {\n      setTitle(rule[0]); // Assuming 'rule[0]' is the title\n      setDescription(rule[2]); // Assuming 'rule[2]' is the description\n      setDisclaimer(rule[3]); // Assuming 'rule[3]' is the disclaimer\n      setProgramType(rule[4]); // Assuming 'rule[4]' is the program type, make sure this index is correct\n      setMediaType(rule[1]); // Assuming 'rule[1]' is the media type\n    }\n  }, [rule]);\n\n  const handleEdit = () => {\n    if (title && description && programType && mediaType && disclaimer) {\n      const updatedRule = { rulename: title, media_type: mediaType, description, program_type: programType, disclaimer };\n      onUpdateRule(updatedRule);\n      onClose();\n    } else {\n      alert('Please enter all fields');\n    }\n  };\n\n  {\"Rule is: \"}\n\n  return (\n    <div className=\"edit-rule-overlay\">\n      <div className=\"edit-rule\">\n        <div className=\"edit-rule-header\">\n          <div>Edit Rule</div>\n          <button className=\"edit-rule-close\" onClick={onClose}>×</button>\n        </div>\n        <div className=\"edit-rule-body\">\n          <div className=\"edit-rule-field\">\n            <label>Title</label>\n            <input \n              type=\"text\" \n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              placeholder=\"Enter title\" \n            />\n          </div>\n          <div className=\"edit-rule-field\">\n            <label>Description</label>\n            <input \n              type=\"text\" \n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              placeholder=\"Enter description\" \n            />\n          </div>\n          <div className=\"edit-rule-field\">\n            <label>Disclaimer</label>\n            <input \n              type=\"text\" \n              value={disclaimer}\n              onChange={(e) => setDisclaimer(e.target.value)}\n              placeholder=\"Enter disclaimer\" \n            />\n          </div>\n          <div className=\"edit-rule-field-row\">\n            <div className=\"edit-rule-field\">\n              <label>Program Type</label>\n              <select \n                value={programType}\n                onChange={(e) => setProgramType(e.target.value)}\n              >\n                <option value=\"\">Select Program Type</option>\n                <option value=\"IAP\">IAP</option>\n                <option value=\"Product\">Product</option>\n                <option value=\"NFO\">NFO</option>\n              </select>\n            </div>\n            <div className=\"edit-rule-field\">\n              <label>Media Type</label>\n              <select \n                value={mediaType}\n                onChange={(e) => setMediaType(e.target.value)}\n              >\n                <option value=\"\">Select Media Type</option>\n                <option value=\"PDF/Image\">PDF/Image</option>\n                <option value=\"Video\">Video</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"edit-rule-footer\">\n          <button className=\"edit-rule-save\" onClick={handleEdit}>Save</button>\n          <button className=\"edit-rule-cancel\" onClick={onClose}>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditRule;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}